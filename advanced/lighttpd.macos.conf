server.modules = (
	"mod_access",
	"mod_accesslog",
	"mod_expire",
	"mod_compress",
 	"mod_redirect",
	"mod_setenv",
	"mod_rewrite"
)

var.log_root    = "/usr/local/var/log/lighttpd"
var.server_root = "/usr/local/var/www"
var.state_dir   = "/usr/local/var/lighttpd"
var.home_dir    = "/usr/local/var/lighttpd"
var.conf_dir    = "/usr/local/etc/lighttpd"
var.vhosts_dir  = server_root + "/vhosts"
var.cache_dir   = "/var/cache/lighttpd"
var.socket_dir  = home_dir + "/sockets"

include "modules.conf"

server.port = 8080
server.use-ipv6 = "disable"
server.username  = "_www"
server.groupname = "_www"
server.document-root = server_root
server.pid-file = state_dir + "/lighttpd.pid"
server.errorlog             = log_root + "/error.log"
accesslog.filename			= "/var/log/lighttpd/access.log"
accesslog.format			= "%{%s}t|%V|%r|%s|%b"

include "conf.d/access_log.conf"
include "conf.d/debug.conf"

server.error-handler-404	= "pihole/index.html"
server.event-handler = "select"
server.network-backend = "writev"
server.max-fds = 2048
server.stat-cache-engine = "simple"
server.max-connections = 256

index-file.names += (
  "index.xhtml", "index.html", "index.htm", "default.htm", "index.php"
)

url.access-deny             = ( "~", ".inc" )

# If the URL starts with /admin, it is the Web interface
$HTTP["url"] =~ "^/admin/" {
	# Create a response header for debugging using curl -I
    setenv.add-response-header = (
        "X-Pi-hole" => "The Pi-hole Web interface is working!",
        "X-Frame-Options" => "DENY"
    )
}

# If the URL does not start with /admin, then it is a query for an ad domain
$HTTP["url"] =~ "^(?!/admin)/.*" {
    # Create a response header for debugging using curl -I
    setenv.add-response-header = ( "X-Pi-hole" => "A black hole for Internet advertisements." )
    # rewrite only js requests
    url.rewrite = ("(.*).js" => "pihole/index.js")
}

static-file.exclude-extensions = ( ".php", ".pl", ".fcgi", ".scgi" )

include "conf.d/mime.conf"
include "conf.d/dirlisting.conf"

server.follow-symlink = "enable"
server.upload-dirs = ( "/var/tmp" )
